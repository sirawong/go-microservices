// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/movies/movies.proto

package grpc_movies

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListMoviesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMoviesRequest) Reset()         { *m = ListMoviesRequest{} }
func (m *ListMoviesRequest) String() string { return proto.CompactTextString(m) }
func (*ListMoviesRequest) ProtoMessage()    {}
func (*ListMoviesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18c7849c07c3e7f3, []int{0}
}

func (m *ListMoviesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMoviesRequest.Unmarshal(m, b)
}
func (m *ListMoviesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMoviesRequest.Marshal(b, m, deterministic)
}
func (m *ListMoviesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMoviesRequest.Merge(m, src)
}
func (m *ListMoviesRequest) XXX_Size() int {
	return xxx_messageInfo_ListMoviesRequest.Size(m)
}
func (m *ListMoviesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMoviesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMoviesRequest proto.InternalMessageInfo

type ListMoviesResponse struct {
	Movies               []*Movie `protobuf:"bytes,1,rep,name=movies,proto3" json:"movies,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMoviesResponse) Reset()         { *m = ListMoviesResponse{} }
func (m *ListMoviesResponse) String() string { return proto.CompactTextString(m) }
func (*ListMoviesResponse) ProtoMessage()    {}
func (*ListMoviesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18c7849c07c3e7f3, []int{1}
}

func (m *ListMoviesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMoviesResponse.Unmarshal(m, b)
}
func (m *ListMoviesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMoviesResponse.Marshal(b, m, deterministic)
}
func (m *ListMoviesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMoviesResponse.Merge(m, src)
}
func (m *ListMoviesResponse) XXX_Size() int {
	return xxx_messageInfo_ListMoviesResponse.Size(m)
}
func (m *ListMoviesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMoviesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMoviesResponse proto.InternalMessageInfo

func (m *ListMoviesResponse) GetMovies() []*Movie {
	if m != nil {
		return m.Movies
	}
	return nil
}

type GetMovieRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMovieRequest) Reset()         { *m = GetMovieRequest{} }
func (m *GetMovieRequest) String() string { return proto.CompactTextString(m) }
func (*GetMovieRequest) ProtoMessage()    {}
func (*GetMovieRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18c7849c07c3e7f3, []int{2}
}

func (m *GetMovieRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMovieRequest.Unmarshal(m, b)
}
func (m *GetMovieRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMovieRequest.Marshal(b, m, deterministic)
}
func (m *GetMovieRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMovieRequest.Merge(m, src)
}
func (m *GetMovieRequest) XXX_Size() int {
	return xxx_messageInfo_GetMovieRequest.Size(m)
}
func (m *GetMovieRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMovieRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMovieRequest proto.InternalMessageInfo

func (m *GetMovieRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetMovieResponse struct {
	Movies               *Movie   `protobuf:"bytes,1,opt,name=movies,proto3" json:"movies,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMovieResponse) Reset()         { *m = GetMovieResponse{} }
func (m *GetMovieResponse) String() string { return proto.CompactTextString(m) }
func (*GetMovieResponse) ProtoMessage()    {}
func (*GetMovieResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18c7849c07c3e7f3, []int{3}
}

func (m *GetMovieResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMovieResponse.Unmarshal(m, b)
}
func (m *GetMovieResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMovieResponse.Marshal(b, m, deterministic)
}
func (m *GetMovieResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMovieResponse.Merge(m, src)
}
func (m *GetMovieResponse) XXX_Size() int {
	return xxx_messageInfo_GetMovieResponse.Size(m)
}
func (m *GetMovieResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMovieResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMovieResponse proto.InternalMessageInfo

func (m *GetMovieResponse) GetMovies() *Movie {
	if m != nil {
		return m.Movies
	}
	return nil
}

type GetMoviesRequest struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMoviesRequest) Reset()         { *m = GetMoviesRequest{} }
func (m *GetMoviesRequest) String() string { return proto.CompactTextString(m) }
func (*GetMoviesRequest) ProtoMessage()    {}
func (*GetMoviesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18c7849c07c3e7f3, []int{4}
}

func (m *GetMoviesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMoviesRequest.Unmarshal(m, b)
}
func (m *GetMoviesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMoviesRequest.Marshal(b, m, deterministic)
}
func (m *GetMoviesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMoviesRequest.Merge(m, src)
}
func (m *GetMoviesRequest) XXX_Size() int {
	return xxx_messageInfo_GetMoviesRequest.Size(m)
}
func (m *GetMoviesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMoviesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMoviesRequest proto.InternalMessageInfo

func (m *GetMoviesRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type GetMoviesResponse struct {
	Movies               []*Movie `protobuf:"bytes,1,rep,name=movies,proto3" json:"movies,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMoviesResponse) Reset()         { *m = GetMoviesResponse{} }
func (m *GetMoviesResponse) String() string { return proto.CompactTextString(m) }
func (*GetMoviesResponse) ProtoMessage()    {}
func (*GetMoviesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18c7849c07c3e7f3, []int{5}
}

func (m *GetMoviesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMoviesResponse.Unmarshal(m, b)
}
func (m *GetMoviesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMoviesResponse.Marshal(b, m, deterministic)
}
func (m *GetMoviesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMoviesResponse.Merge(m, src)
}
func (m *GetMoviesResponse) XXX_Size() int {
	return xxx_messageInfo_GetMoviesResponse.Size(m)
}
func (m *GetMoviesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMoviesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMoviesResponse proto.InternalMessageInfo

func (m *GetMoviesResponse) GetMovies() []*Movie {
	if m != nil {
		return m.Movies
	}
	return nil
}

type GetMovieByISBNResponse struct {
	Movie                *Movie   `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMovieByISBNResponse) Reset()         { *m = GetMovieByISBNResponse{} }
func (m *GetMovieByISBNResponse) String() string { return proto.CompactTextString(m) }
func (*GetMovieByISBNResponse) ProtoMessage()    {}
func (*GetMovieByISBNResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18c7849c07c3e7f3, []int{6}
}

func (m *GetMovieByISBNResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMovieByISBNResponse.Unmarshal(m, b)
}
func (m *GetMovieByISBNResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMovieByISBNResponse.Marshal(b, m, deterministic)
}
func (m *GetMovieByISBNResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMovieByISBNResponse.Merge(m, src)
}
func (m *GetMovieByISBNResponse) XXX_Size() int {
	return xxx_messageInfo_GetMovieByISBNResponse.Size(m)
}
func (m *GetMovieByISBNResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMovieByISBNResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMovieByISBNResponse proto.InternalMessageInfo

func (m *GetMovieByISBNResponse) GetMovie() *Movie {
	if m != nil {
		return m.Movie
	}
	return nil
}

type AddMovieRequest struct {
	Movie                *Movie   `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddMovieRequest) Reset()         { *m = AddMovieRequest{} }
func (m *AddMovieRequest) String() string { return proto.CompactTextString(m) }
func (*AddMovieRequest) ProtoMessage()    {}
func (*AddMovieRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18c7849c07c3e7f3, []int{7}
}

func (m *AddMovieRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddMovieRequest.Unmarshal(m, b)
}
func (m *AddMovieRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddMovieRequest.Marshal(b, m, deterministic)
}
func (m *AddMovieRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddMovieRequest.Merge(m, src)
}
func (m *AddMovieRequest) XXX_Size() int {
	return xxx_messageInfo_AddMovieRequest.Size(m)
}
func (m *AddMovieRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddMovieRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddMovieRequest proto.InternalMessageInfo

func (m *AddMovieRequest) GetMovie() *Movie {
	if m != nil {
		return m.Movie
	}
	return nil
}

type AddMovieResponse struct {
	Movie                *Movie   `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddMovieResponse) Reset()         { *m = AddMovieResponse{} }
func (m *AddMovieResponse) String() string { return proto.CompactTextString(m) }
func (*AddMovieResponse) ProtoMessage()    {}
func (*AddMovieResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18c7849c07c3e7f3, []int{8}
}

func (m *AddMovieResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddMovieResponse.Unmarshal(m, b)
}
func (m *AddMovieResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddMovieResponse.Marshal(b, m, deterministic)
}
func (m *AddMovieResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddMovieResponse.Merge(m, src)
}
func (m *AddMovieResponse) XXX_Size() int {
	return xxx_messageInfo_AddMovieResponse.Size(m)
}
func (m *AddMovieResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddMovieResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddMovieResponse proto.InternalMessageInfo

func (m *AddMovieResponse) GetMovie() *Movie {
	if m != nil {
		return m.Movie
	}
	return nil
}

type DeleteMovieRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMovieRequest) Reset()         { *m = DeleteMovieRequest{} }
func (m *DeleteMovieRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteMovieRequest) ProtoMessage()    {}
func (*DeleteMovieRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18c7849c07c3e7f3, []int{9}
}

func (m *DeleteMovieRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMovieRequest.Unmarshal(m, b)
}
func (m *DeleteMovieRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMovieRequest.Marshal(b, m, deterministic)
}
func (m *DeleteMovieRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMovieRequest.Merge(m, src)
}
func (m *DeleteMovieRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteMovieRequest.Size(m)
}
func (m *DeleteMovieRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMovieRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMovieRequest proto.InternalMessageInfo

func (m *DeleteMovieRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteMovieResponse struct {
	Movie                *Movie   `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMovieResponse) Reset()         { *m = DeleteMovieResponse{} }
func (m *DeleteMovieResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteMovieResponse) ProtoMessage()    {}
func (*DeleteMovieResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18c7849c07c3e7f3, []int{10}
}

func (m *DeleteMovieResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMovieResponse.Unmarshal(m, b)
}
func (m *DeleteMovieResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMovieResponse.Marshal(b, m, deterministic)
}
func (m *DeleteMovieResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMovieResponse.Merge(m, src)
}
func (m *DeleteMovieResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteMovieResponse.Size(m)
}
func (m *DeleteMovieResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMovieResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMovieResponse proto.InternalMessageInfo

func (m *DeleteMovieResponse) GetMovie() *Movie {
	if m != nil {
		return m.Movie
	}
	return nil
}

func init() {
	proto.RegisterType((*ListMoviesRequest)(nil), "grpc.movies.ListMoviesRequest")
	proto.RegisterType((*ListMoviesResponse)(nil), "grpc.movies.ListMoviesResponse")
	proto.RegisterType((*GetMovieRequest)(nil), "grpc.movies.GetMovieRequest")
	proto.RegisterType((*GetMovieResponse)(nil), "grpc.movies.GetMovieResponse")
	proto.RegisterType((*GetMoviesRequest)(nil), "grpc.movies.GetMoviesRequest")
	proto.RegisterType((*GetMoviesResponse)(nil), "grpc.movies.GetMoviesResponse")
	proto.RegisterType((*GetMovieByISBNResponse)(nil), "grpc.movies.GetMovieByISBNResponse")
	proto.RegisterType((*AddMovieRequest)(nil), "grpc.movies.AddMovieRequest")
	proto.RegisterType((*AddMovieResponse)(nil), "grpc.movies.AddMovieResponse")
	proto.RegisterType((*DeleteMovieRequest)(nil), "grpc.movies.DeleteMovieRequest")
	proto.RegisterType((*DeleteMovieResponse)(nil), "grpc.movies.DeleteMovieResponse")
}

func init() { proto.RegisterFile("proto/movies/movies.proto", fileDescriptor_18c7849c07c3e7f3) }

var fileDescriptor_18c7849c07c3e7f3 = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0x6f, 0x4b, 0x83, 0x50,
	0x14, 0xc6, 0x71, 0xd2, 0xc8, 0x23, 0x34, 0x77, 0x06, 0xb1, 0xa4, 0x96, 0x5d, 0xf6, 0x42, 0x7a,
	0x61, 0xb0, 0x5e, 0x16, 0xad, 0x49, 0x30, 0x16, 0x2d, 0x86, 0x7d, 0x82, 0xca, 0xcb, 0x10, 0x5a,
	0xda, 0xae, 0x05, 0x7d, 0x85, 0x3e, 0x75, 0xe4, 0x55, 0xaf, 0xd7, 0x3f, 0xab, 0xf5, 0x4a, 0x39,
	0xe7, 0x77, 0x9e, 0xf3, 0x78, 0xce, 0x11, 0x0e, 0xa2, 0x75, 0x18, 0x87, 0x67, 0xab, 0xf0, 0x23,
	0xa0, 0x2c, 0x7d, 0x38, 0x49, 0x0c, 0xf5, 0xe5, 0x3a, 0x7a, 0x76, 0x78, 0xc8, 0x24, 0x75, 0xdc,
	0x8a, 0x32, 0xf6, 0xb8, 0xcc, 0x0a, 0x48, 0x0f, 0xba, 0x77, 0x01, 0x8b, 0xe7, 0x49, 0xd2, 0xa3,
	0x6f, 0xef, 0x94, 0xc5, 0xe4, 0x1a, 0xb0, 0x18, 0x64, 0x51, 0xf8, 0xca, 0x28, 0x9e, 0x42, 0x9b,
	0x6b, 0xf4, 0x15, 0x4b, 0xb5, 0xf5, 0x11, 0x3a, 0x85, 0x66, 0x4e, 0x02, 0x7b, 0x29, 0x41, 0x4e,
	0xa0, 0x33, 0xa5, 0x5c, 0x20, 0x15, 0xc5, 0x3d, 0x68, 0x05, 0x7e, 0x5f, 0xb1, 0x14, 0x5b, 0xf3,
	0x5a, 0x81, 0x4f, 0xae, 0xc0, 0x10, 0x48, 0x4d, 0x0b, 0xe5, 0x97, 0x16, 0x43, 0x51, 0x9f, 0x19,
	0x47, 0x03, 0xd4, 0xc0, 0xe7, 0xfe, 0x34, 0xef, 0xe7, 0x95, 0x8c, 0xa1, 0x5b, 0xa0, 0xfe, 0xf1,
	0x25, 0x2e, 0xec, 0x67, 0x02, 0xee, 0xe7, 0xec, 0xc1, 0xbd, 0xcf, 0x55, 0x6c, 0xd8, 0x49, 0x98,
	0x0d, 0x5e, 0x39, 0x40, 0x2e, 0xa0, 0x33, 0xf1, 0x7d, 0x69, 0x1a, 0x7f, 0x2f, 0xbe, 0x04, 0x43,
	0x14, 0x6f, 0xdd, 0x7a, 0x08, 0x78, 0x43, 0x5f, 0x68, 0x4c, 0x37, 0xee, 0x62, 0x0c, 0x3d, 0x89,
	0xda, 0xb6, 0xcd, 0xe8, 0x4b, 0x05, 0x8d, 0x0f, 0x79, 0xb2, 0x98, 0xe1, 0x1c, 0x40, 0xdc, 0x0f,
	0x0e, 0xa4, 0xb2, 0xca, 0xb5, 0x99, 0xc7, 0x8d, 0xf9, 0xd4, 0xc6, 0x14, 0x76, 0xb3, 0x15, 0xe0,
	0xa1, 0x04, 0x97, 0x6e, 0xcc, 0x3c, 0x6a, 0xc8, 0xa6, 0x42, 0xb7, 0xa0, 0xe5, 0xc7, 0x80, 0xf5,
	0x6c, 0xee, 0x6a, 0xd0, 0x94, 0x16, 0xa6, 0xb2, 0xb5, 0x94, 0x4c, 0x95, 0x56, 0x5d, 0x32, 0x55,
	0xd9, 0xe5, 0x02, 0xf4, 0xc2, 0xec, 0x51, 0x9e, 0x46, 0x75, 0x77, 0xa6, 0xd5, 0x0c, 0x70, 0xc5,
	0xa7, 0x76, 0xf2, 0x6b, 0x9f, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x9c, 0x7d, 0xc2, 0x7a, 0x28,
	0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MoviesAPIClient is the client API for MoviesAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MoviesAPIClient interface {
	// Get all Movies
	ListMovies(ctx context.Context, in *ListMoviesRequest, opts ...grpc.CallOption) (*ListMoviesResponse, error)
	// Get Movie by ID
	GetMovie(ctx context.Context, in *GetMovieRequest, opts ...grpc.CallOption) (*GetMovieResponse, error)
	// Get Movie by IDs
	GetMovies(ctx context.Context, in *GetMoviesRequest, opts ...grpc.CallOption) (*GetMoviesResponse, error)
	// Add new Movie
	AddMovie(ctx context.Context, in *AddMovieRequest, opts ...grpc.CallOption) (*AddMovieResponse, error)
	// Delete Movie
	DeleteMovie(ctx context.Context, in *DeleteMovieRequest, opts ...grpc.CallOption) (*DeleteMovieResponse, error)
}

type moviesAPIClient struct {
	cc *grpc.ClientConn
}

func NewMoviesAPIClient(cc *grpc.ClientConn) MoviesAPIClient {
	return &moviesAPIClient{cc}
}

func (c *moviesAPIClient) ListMovies(ctx context.Context, in *ListMoviesRequest, opts ...grpc.CallOption) (*ListMoviesResponse, error) {
	out := new(ListMoviesResponse)
	err := c.cc.Invoke(ctx, "/grpc.movies.MoviesAPI/ListMovies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moviesAPIClient) GetMovie(ctx context.Context, in *GetMovieRequest, opts ...grpc.CallOption) (*GetMovieResponse, error) {
	out := new(GetMovieResponse)
	err := c.cc.Invoke(ctx, "/grpc.movies.MoviesAPI/GetMovie", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moviesAPIClient) GetMovies(ctx context.Context, in *GetMoviesRequest, opts ...grpc.CallOption) (*GetMoviesResponse, error) {
	out := new(GetMoviesResponse)
	err := c.cc.Invoke(ctx, "/grpc.movies.MoviesAPI/GetMovies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moviesAPIClient) AddMovie(ctx context.Context, in *AddMovieRequest, opts ...grpc.CallOption) (*AddMovieResponse, error) {
	out := new(AddMovieResponse)
	err := c.cc.Invoke(ctx, "/grpc.movies.MoviesAPI/AddMovie", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moviesAPIClient) DeleteMovie(ctx context.Context, in *DeleteMovieRequest, opts ...grpc.CallOption) (*DeleteMovieResponse, error) {
	out := new(DeleteMovieResponse)
	err := c.cc.Invoke(ctx, "/grpc.movies.MoviesAPI/DeleteMovie", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MoviesAPIServer is the server API for MoviesAPI service.
type MoviesAPIServer interface {
	// Get all Movies
	ListMovies(context.Context, *ListMoviesRequest) (*ListMoviesResponse, error)
	// Get Movie by ID
	GetMovie(context.Context, *GetMovieRequest) (*GetMovieResponse, error)
	// Get Movie by IDs
	GetMovies(context.Context, *GetMoviesRequest) (*GetMoviesResponse, error)
	// Add new Movie
	AddMovie(context.Context, *AddMovieRequest) (*AddMovieResponse, error)
	// Delete Movie
	DeleteMovie(context.Context, *DeleteMovieRequest) (*DeleteMovieResponse, error)
}

// UnimplementedMoviesAPIServer can be embedded to have forward compatible implementations.
type UnimplementedMoviesAPIServer struct {
}

func (*UnimplementedMoviesAPIServer) ListMovies(ctx context.Context, req *ListMoviesRequest) (*ListMoviesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMovies not implemented")
}
func (*UnimplementedMoviesAPIServer) GetMovie(ctx context.Context, req *GetMovieRequest) (*GetMovieResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMovie not implemented")
}
func (*UnimplementedMoviesAPIServer) GetMovies(ctx context.Context, req *GetMoviesRequest) (*GetMoviesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMovies not implemented")
}
func (*UnimplementedMoviesAPIServer) AddMovie(ctx context.Context, req *AddMovieRequest) (*AddMovieResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddMovie not implemented")
}
func (*UnimplementedMoviesAPIServer) DeleteMovie(ctx context.Context, req *DeleteMovieRequest) (*DeleteMovieResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMovie not implemented")
}

func RegisterMoviesAPIServer(s *grpc.Server, srv MoviesAPIServer) {
	s.RegisterService(&_MoviesAPI_serviceDesc, srv)
}

func _MoviesAPI_ListMovies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMoviesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoviesAPIServer).ListMovies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.movies.MoviesAPI/ListMovies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoviesAPIServer).ListMovies(ctx, req.(*ListMoviesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MoviesAPI_GetMovie_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMovieRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoviesAPIServer).GetMovie(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.movies.MoviesAPI/GetMovie",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoviesAPIServer).GetMovie(ctx, req.(*GetMovieRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MoviesAPI_GetMovies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMoviesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoviesAPIServer).GetMovies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.movies.MoviesAPI/GetMovies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoviesAPIServer).GetMovies(ctx, req.(*GetMoviesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MoviesAPI_AddMovie_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddMovieRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoviesAPIServer).AddMovie(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.movies.MoviesAPI/AddMovie",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoviesAPIServer).AddMovie(ctx, req.(*AddMovieRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MoviesAPI_DeleteMovie_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMovieRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoviesAPIServer).DeleteMovie(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.movies.MoviesAPI/DeleteMovie",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoviesAPIServer).DeleteMovie(ctx, req.(*DeleteMovieRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MoviesAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.movies.MoviesAPI",
	HandlerType: (*MoviesAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListMovies",
			Handler:    _MoviesAPI_ListMovies_Handler,
		},
		{
			MethodName: "GetMovie",
			Handler:    _MoviesAPI_GetMovie_Handler,
		},
		{
			MethodName: "GetMovies",
			Handler:    _MoviesAPI_GetMovies_Handler,
		},
		{
			MethodName: "AddMovie",
			Handler:    _MoviesAPI_AddMovie_Handler,
		},
		{
			MethodName: "DeleteMovie",
			Handler:    _MoviesAPI_DeleteMovie_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/movies/movies.proto",
}
