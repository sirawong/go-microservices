// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/holders/holders.services.proto

package grpc_holders_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListHoldersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListHoldersRequest) Reset()         { *m = ListHoldersRequest{} }
func (m *ListHoldersRequest) String() string { return proto.CompactTextString(m) }
func (*ListHoldersRequest) ProtoMessage()    {}
func (*ListHoldersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed292d0ce035f46d, []int{0}
}

func (m *ListHoldersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListHoldersRequest.Unmarshal(m, b)
}
func (m *ListHoldersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListHoldersRequest.Marshal(b, m, deterministic)
}
func (m *ListHoldersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListHoldersRequest.Merge(m, src)
}
func (m *ListHoldersRequest) XXX_Size() int {
	return xxx_messageInfo_ListHoldersRequest.Size(m)
}
func (m *ListHoldersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListHoldersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListHoldersRequest proto.InternalMessageInfo

type ListHoldersResponse struct {
	Holders              []*Holder `protobuf:"bytes,1,rep,name=holders,proto3" json:"holders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListHoldersResponse) Reset()         { *m = ListHoldersResponse{} }
func (m *ListHoldersResponse) String() string { return proto.CompactTextString(m) }
func (*ListHoldersResponse) ProtoMessage()    {}
func (*ListHoldersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed292d0ce035f46d, []int{1}
}

func (m *ListHoldersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListHoldersResponse.Unmarshal(m, b)
}
func (m *ListHoldersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListHoldersResponse.Marshal(b, m, deterministic)
}
func (m *ListHoldersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListHoldersResponse.Merge(m, src)
}
func (m *ListHoldersResponse) XXX_Size() int {
	return xxx_messageInfo_ListHoldersResponse.Size(m)
}
func (m *ListHoldersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListHoldersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListHoldersResponse proto.InternalMessageInfo

func (m *ListHoldersResponse) GetHolders() []*Holder {
	if m != nil {
		return m.Holders
	}
	return nil
}

type GetHolderByBookIdRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHolderByBookIdRequest) Reset()         { *m = GetHolderByBookIdRequest{} }
func (m *GetHolderByBookIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetHolderByBookIdRequest) ProtoMessage()    {}
func (*GetHolderByBookIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed292d0ce035f46d, []int{2}
}

func (m *GetHolderByBookIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHolderByBookIdRequest.Unmarshal(m, b)
}
func (m *GetHolderByBookIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHolderByBookIdRequest.Marshal(b, m, deterministic)
}
func (m *GetHolderByBookIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHolderByBookIdRequest.Merge(m, src)
}
func (m *GetHolderByBookIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetHolderByBookIdRequest.Size(m)
}
func (m *GetHolderByBookIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHolderByBookIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHolderByBookIdRequest proto.InternalMessageInfo

func (m *GetHolderByBookIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetHolderByBookIdResponse struct {
	Holder               *Holder  `protobuf:"bytes,1,opt,name=holder,proto3" json:"holder,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHolderByBookIdResponse) Reset()         { *m = GetHolderByBookIdResponse{} }
func (m *GetHolderByBookIdResponse) String() string { return proto.CompactTextString(m) }
func (*GetHolderByBookIdResponse) ProtoMessage()    {}
func (*GetHolderByBookIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed292d0ce035f46d, []int{3}
}

func (m *GetHolderByBookIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHolderByBookIdResponse.Unmarshal(m, b)
}
func (m *GetHolderByBookIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHolderByBookIdResponse.Marshal(b, m, deterministic)
}
func (m *GetHolderByBookIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHolderByBookIdResponse.Merge(m, src)
}
func (m *GetHolderByBookIdResponse) XXX_Size() int {
	return xxx_messageInfo_GetHolderByBookIdResponse.Size(m)
}
func (m *GetHolderByBookIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHolderByBookIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetHolderByBookIdResponse proto.InternalMessageInfo

func (m *GetHolderByBookIdResponse) GetHolder() *Holder {
	if m != nil {
		return m.Holder
	}
	return nil
}

type GetHolderRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHolderRequest) Reset()         { *m = GetHolderRequest{} }
func (m *GetHolderRequest) String() string { return proto.CompactTextString(m) }
func (*GetHolderRequest) ProtoMessage()    {}
func (*GetHolderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed292d0ce035f46d, []int{4}
}

func (m *GetHolderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHolderRequest.Unmarshal(m, b)
}
func (m *GetHolderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHolderRequest.Marshal(b, m, deterministic)
}
func (m *GetHolderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHolderRequest.Merge(m, src)
}
func (m *GetHolderRequest) XXX_Size() int {
	return xxx_messageInfo_GetHolderRequest.Size(m)
}
func (m *GetHolderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHolderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHolderRequest proto.InternalMessageInfo

func (m *GetHolderRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetHolderResponse struct {
	Holder               *Holder  `protobuf:"bytes,1,opt,name=holder,proto3" json:"holder,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHolderResponse) Reset()         { *m = GetHolderResponse{} }
func (m *GetHolderResponse) String() string { return proto.CompactTextString(m) }
func (*GetHolderResponse) ProtoMessage()    {}
func (*GetHolderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed292d0ce035f46d, []int{5}
}

func (m *GetHolderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHolderResponse.Unmarshal(m, b)
}
func (m *GetHolderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHolderResponse.Marshal(b, m, deterministic)
}
func (m *GetHolderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHolderResponse.Merge(m, src)
}
func (m *GetHolderResponse) XXX_Size() int {
	return xxx_messageInfo_GetHolderResponse.Size(m)
}
func (m *GetHolderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHolderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetHolderResponse proto.InternalMessageInfo

func (m *GetHolderResponse) GetHolder() *Holder {
	if m != nil {
		return m.Holder
	}
	return nil
}

type AddHolderRequest struct {
	Holder               *Holder  `protobuf:"bytes,1,opt,name=holder,proto3" json:"holder,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddHolderRequest) Reset()         { *m = AddHolderRequest{} }
func (m *AddHolderRequest) String() string { return proto.CompactTextString(m) }
func (*AddHolderRequest) ProtoMessage()    {}
func (*AddHolderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed292d0ce035f46d, []int{6}
}

func (m *AddHolderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddHolderRequest.Unmarshal(m, b)
}
func (m *AddHolderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddHolderRequest.Marshal(b, m, deterministic)
}
func (m *AddHolderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddHolderRequest.Merge(m, src)
}
func (m *AddHolderRequest) XXX_Size() int {
	return xxx_messageInfo_AddHolderRequest.Size(m)
}
func (m *AddHolderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddHolderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddHolderRequest proto.InternalMessageInfo

func (m *AddHolderRequest) GetHolder() *Holder {
	if m != nil {
		return m.Holder
	}
	return nil
}

type AddHolderResponse struct {
	Holder               *Holder  `protobuf:"bytes,1,opt,name=holder,proto3" json:"holder,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddHolderResponse) Reset()         { *m = AddHolderResponse{} }
func (m *AddHolderResponse) String() string { return proto.CompactTextString(m) }
func (*AddHolderResponse) ProtoMessage()    {}
func (*AddHolderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed292d0ce035f46d, []int{7}
}

func (m *AddHolderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddHolderResponse.Unmarshal(m, b)
}
func (m *AddHolderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddHolderResponse.Marshal(b, m, deterministic)
}
func (m *AddHolderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddHolderResponse.Merge(m, src)
}
func (m *AddHolderResponse) XXX_Size() int {
	return xxx_messageInfo_AddHolderResponse.Size(m)
}
func (m *AddHolderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddHolderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddHolderResponse proto.InternalMessageInfo

func (m *AddHolderResponse) GetHolder() *Holder {
	if m != nil {
		return m.Holder
	}
	return nil
}

type UpdateHolderRequest struct {
	Holder               *Holder  `protobuf:"bytes,1,opt,name=holder,proto3" json:"holder,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateHolderRequest) Reset()         { *m = UpdateHolderRequest{} }
func (m *UpdateHolderRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateHolderRequest) ProtoMessage()    {}
func (*UpdateHolderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed292d0ce035f46d, []int{8}
}

func (m *UpdateHolderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateHolderRequest.Unmarshal(m, b)
}
func (m *UpdateHolderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateHolderRequest.Marshal(b, m, deterministic)
}
func (m *UpdateHolderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateHolderRequest.Merge(m, src)
}
func (m *UpdateHolderRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateHolderRequest.Size(m)
}
func (m *UpdateHolderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateHolderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateHolderRequest proto.InternalMessageInfo

func (m *UpdateHolderRequest) GetHolder() *Holder {
	if m != nil {
		return m.Holder
	}
	return nil
}

type UpdateHolderResponse struct {
	Holder               *Holder  `protobuf:"bytes,1,opt,name=holder,proto3" json:"holder,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateHolderResponse) Reset()         { *m = UpdateHolderResponse{} }
func (m *UpdateHolderResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateHolderResponse) ProtoMessage()    {}
func (*UpdateHolderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed292d0ce035f46d, []int{9}
}

func (m *UpdateHolderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateHolderResponse.Unmarshal(m, b)
}
func (m *UpdateHolderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateHolderResponse.Marshal(b, m, deterministic)
}
func (m *UpdateHolderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateHolderResponse.Merge(m, src)
}
func (m *UpdateHolderResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateHolderResponse.Size(m)
}
func (m *UpdateHolderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateHolderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateHolderResponse proto.InternalMessageInfo

func (m *UpdateHolderResponse) GetHolder() *Holder {
	if m != nil {
		return m.Holder
	}
	return nil
}

func init() {
	proto.RegisterType((*ListHoldersRequest)(nil), "grpc.holders.v1.ListHoldersRequest")
	proto.RegisterType((*ListHoldersResponse)(nil), "grpc.holders.v1.ListHoldersResponse")
	proto.RegisterType((*GetHolderByBookIdRequest)(nil), "grpc.holders.v1.GetHolderByBookIdRequest")
	proto.RegisterType((*GetHolderByBookIdResponse)(nil), "grpc.holders.v1.GetHolderByBookIdResponse")
	proto.RegisterType((*GetHolderRequest)(nil), "grpc.holders.v1.GetHolderRequest")
	proto.RegisterType((*GetHolderResponse)(nil), "grpc.holders.v1.GetHolderResponse")
	proto.RegisterType((*AddHolderRequest)(nil), "grpc.holders.v1.AddHolderRequest")
	proto.RegisterType((*AddHolderResponse)(nil), "grpc.holders.v1.AddHolderResponse")
	proto.RegisterType((*UpdateHolderRequest)(nil), "grpc.holders.v1.UpdateHolderRequest")
	proto.RegisterType((*UpdateHolderResponse)(nil), "grpc.holders.v1.UpdateHolderResponse")
}

func init() {
	proto.RegisterFile("proto/holders/holders.services.proto", fileDescriptor_ed292d0ce035f46d)
}

var fileDescriptor_ed292d0ce035f46d = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0x5f, 0x4f, 0xc2, 0x30,
	0x14, 0xc5, 0x03, 0x24, 0x18, 0x2e, 0x46, 0xa1, 0x90, 0x38, 0xf7, 0x84, 0x15, 0x13, 0xe4, 0xa1,
	0x04, 0xfc, 0x04, 0x20, 0x11, 0x48, 0x78, 0x30, 0x4b, 0x4c, 0x4c, 0x7c, 0x42, 0xda, 0xe0, 0xfc,
	0xd7, 0xb9, 0x4e, 0x12, 0x3f, 0xa9, 0x5f, 0xc7, 0x64, 0x6b, 0x67, 0x47, 0xb7, 0xa9, 0xf3, 0x69,
	0xc9, 0xee, 0x39, 0xbf, 0x73, 0xb3, 0x7b, 0x32, 0xe8, 0x7a, 0x3e, 0x0f, 0xf8, 0xe0, 0x81, 0x3f,
	0x53, 0xe6, 0x0b, 0xf5, 0x24, 0x82, 0xf9, 0x5b, 0x77, 0xcd, 0x04, 0x09, 0xc7, 0xe8, 0x70, 0xe3,
	0x7b, 0x6b, 0xa2, 0x86, 0xdb, 0xa1, 0x9d, 0x61, 0x7b, 0x61, 0x42, 0xac, 0x36, 0xca, 0x86, 0xdb,
	0x80, 0x96, 0xae, 0x08, 0xe6, 0xd1, 0xd4, 0x61, 0x6f, 0xef, 0x4c, 0x04, 0x78, 0x0e, 0xad, 0xc4,
	0x5b, 0xe1, 0xf1, 0x57, 0xc1, 0xd0, 0x10, 0xf6, 0x24, 0xc6, 0x2a, 0x75, 0x2a, 0xbd, 0xfa, 0xe8,
	0x88, 0xec, 0xa4, 0x92, 0xc8, 0xe2, 0x28, 0x1d, 0xee, 0x83, 0x35, 0x63, 0x12, 0x34, 0xf9, 0x98,
	0x70, 0xfe, 0xb4, 0xa0, 0x32, 0x05, 0x1d, 0x40, 0xd9, 0xa5, 0x56, 0xa9, 0x53, 0xea, 0xd5, 0x9c,
	0xb2, 0x4b, 0xf1, 0x12, 0x8e, 0x53, 0xb4, 0x32, 0x7b, 0x00, 0xd5, 0x88, 0x19, 0x1a, 0x72, 0xa2,
	0xa5, 0x0c, 0x63, 0x68, 0xc4, 0xb4, 0xac, 0xc4, 0x29, 0x34, 0x35, 0x4d, 0xd1, 0xa4, 0x4b, 0x68,
	0x8c, 0x29, 0x4d, 0x26, 0xfd, 0x19, 0x32, 0x85, 0xa6, 0x06, 0x29, 0xba, 0xca, 0x15, 0xb4, 0x6e,
	0x3c, 0xba, 0x0a, 0xd8, 0x3f, 0xb7, 0x99, 0x41, 0x3b, 0xc9, 0x29, 0xb8, 0xd0, 0xe8, 0xb3, 0x02,
	0x20, 0x6b, 0x34, 0xbe, 0x5e, 0xa0, 0x5b, 0xa8, 0x6b, 0xc5, 0x42, 0xa7, 0x86, 0xdd, 0x2c, 0xa3,
	0xdd, 0xcd, 0x17, 0xc9, 0xcd, 0x1e, 0xb5, 0x53, 0xaa, 0xf2, 0xa0, 0x73, 0xc3, 0x9a, 0x55, 0x46,
	0xbb, 0xff, 0x1b, 0xa9, 0xcc, 0x72, 0xa0, 0x16, 0x0f, 0xd1, 0x49, 0xb6, 0x51, 0xb1, 0x71, 0x9e,
	0xe4, 0x9b, 0x19, 0xdf, 0x3f, 0x85, 0xb9, 0x5b, 0xb0, 0x14, 0xa6, 0x59, 0x9f, 0x3b, 0xd8, 0xd7,
	0xaf, 0x88, 0xcc, 0x2f, 0x99, 0x52, 0x16, 0xfb, 0xec, 0x07, 0x55, 0x04, 0xbf, 0xaf, 0x86, 0x3f,
	0x90, 0x8b, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9c, 0x4b, 0xac, 0xf9, 0x9f, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HoldersAPIClient is the client API for HoldersAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HoldersAPIClient interface {
	// Get all customers
	ListHolders(ctx context.Context, in *ListHoldersRequest, opts ...grpc.CallOption) (*ListHoldersResponse, error)
	// Get customer by book ID
	GetHolderByBookId(ctx context.Context, in *GetHolderByBookIdRequest, opts ...grpc.CallOption) (*GetHolderByBookIdResponse, error)
	// Get customer by ID
	GetHolder(ctx context.Context, in *GetHolderRequest, opts ...grpc.CallOption) (*GetHolderResponse, error)
	// Add new customer
	AddHolder(ctx context.Context, in *AddHolderRequest, opts ...grpc.CallOption) (*AddHolderResponse, error)
	// Update customer
	UpdateHolder(ctx context.Context, in *UpdateHolderRequest, opts ...grpc.CallOption) (*UpdateHolderResponse, error)
}

type holdersAPIClient struct {
	cc *grpc.ClientConn
}

func NewHoldersAPIClient(cc *grpc.ClientConn) HoldersAPIClient {
	return &holdersAPIClient{cc}
}

func (c *holdersAPIClient) ListHolders(ctx context.Context, in *ListHoldersRequest, opts ...grpc.CallOption) (*ListHoldersResponse, error) {
	out := new(ListHoldersResponse)
	err := c.cc.Invoke(ctx, "/grpc.holders.v1.HoldersAPI/ListHolders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *holdersAPIClient) GetHolderByBookId(ctx context.Context, in *GetHolderByBookIdRequest, opts ...grpc.CallOption) (*GetHolderByBookIdResponse, error) {
	out := new(GetHolderByBookIdResponse)
	err := c.cc.Invoke(ctx, "/grpc.holders.v1.HoldersAPI/GetHolderByBookId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *holdersAPIClient) GetHolder(ctx context.Context, in *GetHolderRequest, opts ...grpc.CallOption) (*GetHolderResponse, error) {
	out := new(GetHolderResponse)
	err := c.cc.Invoke(ctx, "/grpc.holders.v1.HoldersAPI/GetHolder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *holdersAPIClient) AddHolder(ctx context.Context, in *AddHolderRequest, opts ...grpc.CallOption) (*AddHolderResponse, error) {
	out := new(AddHolderResponse)
	err := c.cc.Invoke(ctx, "/grpc.holders.v1.HoldersAPI/AddHolder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *holdersAPIClient) UpdateHolder(ctx context.Context, in *UpdateHolderRequest, opts ...grpc.CallOption) (*UpdateHolderResponse, error) {
	out := new(UpdateHolderResponse)
	err := c.cc.Invoke(ctx, "/grpc.holders.v1.HoldersAPI/UpdateHolder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HoldersAPIServer is the server API for HoldersAPI service.
type HoldersAPIServer interface {
	// Get all customers
	ListHolders(context.Context, *ListHoldersRequest) (*ListHoldersResponse, error)
	// Get customer by book ID
	GetHolderByBookId(context.Context, *GetHolderByBookIdRequest) (*GetHolderByBookIdResponse, error)
	// Get customer by ID
	GetHolder(context.Context, *GetHolderRequest) (*GetHolderResponse, error)
	// Add new customer
	AddHolder(context.Context, *AddHolderRequest) (*AddHolderResponse, error)
	// Update customer
	UpdateHolder(context.Context, *UpdateHolderRequest) (*UpdateHolderResponse, error)
}

// UnimplementedHoldersAPIServer can be embedded to have forward compatible implementations.
type UnimplementedHoldersAPIServer struct {
}

func (*UnimplementedHoldersAPIServer) ListHolders(ctx context.Context, req *ListHoldersRequest) (*ListHoldersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListHolders not implemented")
}
func (*UnimplementedHoldersAPIServer) GetHolderByBookId(ctx context.Context, req *GetHolderByBookIdRequest) (*GetHolderByBookIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHolderByBookId not implemented")
}
func (*UnimplementedHoldersAPIServer) GetHolder(ctx context.Context, req *GetHolderRequest) (*GetHolderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHolder not implemented")
}
func (*UnimplementedHoldersAPIServer) AddHolder(ctx context.Context, req *AddHolderRequest) (*AddHolderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddHolder not implemented")
}
func (*UnimplementedHoldersAPIServer) UpdateHolder(ctx context.Context, req *UpdateHolderRequest) (*UpdateHolderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHolder not implemented")
}

func RegisterHoldersAPIServer(s *grpc.Server, srv HoldersAPIServer) {
	s.RegisterService(&_HoldersAPI_serviceDesc, srv)
}

func _HoldersAPI_ListHolders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListHoldersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HoldersAPIServer).ListHolders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.holders.v1.HoldersAPI/ListHolders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HoldersAPIServer).ListHolders(ctx, req.(*ListHoldersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HoldersAPI_GetHolderByBookId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHolderByBookIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HoldersAPIServer).GetHolderByBookId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.holders.v1.HoldersAPI/GetHolderByBookId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HoldersAPIServer).GetHolderByBookId(ctx, req.(*GetHolderByBookIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HoldersAPI_GetHolder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHolderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HoldersAPIServer).GetHolder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.holders.v1.HoldersAPI/GetHolder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HoldersAPIServer).GetHolder(ctx, req.(*GetHolderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HoldersAPI_AddHolder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddHolderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HoldersAPIServer).AddHolder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.holders.v1.HoldersAPI/AddHolder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HoldersAPIServer).AddHolder(ctx, req.(*AddHolderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HoldersAPI_UpdateHolder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateHolderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HoldersAPIServer).UpdateHolder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.holders.v1.HoldersAPI/UpdateHolder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HoldersAPIServer).UpdateHolder(ctx, req.(*UpdateHolderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HoldersAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.holders.v1.HoldersAPI",
	HandlerType: (*HoldersAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListHolders",
			Handler:    _HoldersAPI_ListHolders_Handler,
		},
		{
			MethodName: "GetHolderByBookId",
			Handler:    _HoldersAPI_GetHolderByBookId_Handler,
		},
		{
			MethodName: "GetHolder",
			Handler:    _HoldersAPI_GetHolder_Handler,
		},
		{
			MethodName: "AddHolder",
			Handler:    _HoldersAPI_AddHolder_Handler,
		},
		{
			MethodName: "UpdateHolder",
			Handler:    _HoldersAPI_UpdateHolder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/holders/holders.services.proto",
}
